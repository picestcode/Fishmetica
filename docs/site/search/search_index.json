{
    "docs": [
        {
            "location": "/",
            "text": "Fishmetica is a Julia package for the population dynamics modeling.",
            "title": "Main"
        },
        {
            "location": "/tutorials/page5/",
            "text": "Global constants\n\n\n#\n\n\nFishmetica.ALGS\n \u2014 \nConstant\n.\n\n\nlist of optimization algorithms\n\n\nsource\n\n\n#\n\n\nFishmetica.kx\n \u2014 \nConstant\n.\n\n\nconst coefficients at main equations, default value\n\n\nsource\n\n\n#\n\n\nFishmetica.kw\n \u2014 \nConstant\n.\n\n\nconst coefficients at main equations, default\n\n\nsource\n\n\n#\n\n\nFishmetica.lambda\n \u2014 \nConstant\n.\n\n\nglobal weight for criterium, default value \n\n\nsource\n\n\n\n\nSetting global constants\n\n\n#\n\n\nFishmetica.set_count\n \u2014 \nFunction\n.\n\n\nsets global Fishmetica.count to c\n\n\nsource\n\n\n#\n\n\nFishmetica.set_cst\n \u2014 \nFunction\n.\n\n\nsets global Fishmetica.cst to c\n\n\nsource\n\n\n#\n\n\nFishmetica.set_jtrustsmax\n \u2014 \nFunction\n.\n\n\nsets global Fishmetica.jtrustsmax to c\n\n\nsource\n\n\n#\n\n\nFishmetica.set_lambda\n \u2014 \nFunction\n.\n\n\nsets global Fishmetica.lambda to l\n\n\nsource\n\n\nOvsyannikov data (pollock of Okhotsk see)\n\n\n\n\nSetting global constants\n\n\n#\n\n\nFishmetica.ww_osp\n \u2014 \nFunction\n.\n\n\nreturns ovsyannikov's weight for j \n\n\nsource",
            "title": "Constants"
        },
        {
            "location": "/tutorials/page5/#global-constants",
            "text": "#  Fishmetica.ALGS  \u2014  Constant .  list of optimization algorithms  source  #  Fishmetica.kx  \u2014  Constant .  const coefficients at main equations, default value  source  #  Fishmetica.kw  \u2014  Constant .  const coefficients at main equations, default  source  #  Fishmetica.lambda  \u2014  Constant .  global weight for criterium, default value   source",
            "title": "Global constants"
        },
        {
            "location": "/tutorials/page5/#setting-global-constants",
            "text": "#  Fishmetica.set_count  \u2014  Function .  sets global Fishmetica.count to c  source  #  Fishmetica.set_cst  \u2014  Function .  sets global Fishmetica.cst to c  source  #  Fishmetica.set_jtrustsmax  \u2014  Function .  sets global Fishmetica.jtrustsmax to c  source  #  Fishmetica.set_lambda  \u2014  Function .  sets global Fishmetica.lambda to l  source  Ovsyannikov data (pollock of Okhotsk see)",
            "title": "Setting global constants"
        },
        {
            "location": "/tutorials/page5/#setting-global-constants_1",
            "text": "#  Fishmetica.ww_osp  \u2014  Function .  returns ovsyannikov's weight for j   source",
            "title": "Setting global constants"
        },
        {
            "location": "/tutorials/page4/",
            "text": "Generating parameters and structures\n\n\nModel components\n\n\n#\n\n\nFishmetica.gm1\n \u2014 \nFunction\n.\n\n\ngenerates x,y with M,F,W,kx,kw,x1j,xt1\n\n\nsource\n\n\n#\n\n\nFishmetica.sigma\n \u2014 \nFunction\n.\n\n\nreturns sigma for  j\n\n\nsource\n\n\n#\n\n\nFishmetica.ushape\n \u2014 \nFunction\n.\n\n\nreturns u-function for j\n\n\nsource\n\n\n#\n\n\nFishmetica.w\n \u2014 \nFunction\n.\n\n\nreturns wieght for t,j (according to the ovsyannikov data)\n\n\nsource\n\n\n#\n\n\nFishmetica.gwtj\n \u2014 \nFunction\n.\n\n\nwtj\n\n\nsource\n\n\n#\n\n\nFishmetica.h\n \u2014 \nFunction\n.\n\n\nfills H with 1's\n\n\nsource\n\n\n#\n\n\nFishmetica.ghtj\n \u2014 \nFunction\n.\n\n\nmtj\n\n\nsource\n\n\n#\n\n\nFishmetica.gmtj\n \u2014 \nFunction\n.\n\n\nmtj\n\n\nsource\n\n\n#\n\n\nFishmetica.gft\n \u2014 \nFunction\n.\n\n\nft=0.2\n\n\nsource\n\n\n#\n\n\nFishmetica.gftj\n \u2014 \nFunction\n.\n\n\nftj\n\n\nsource\n\n\n#\n\n\nFishmetica.gx\n \u2014 \nFunction\n.\n\n\nx\n\n\nsource\n\n\n#\n\n\nFishmetica.gy\n \u2014 \nFunction\n.\n\n\ny\n\n\nsource\n\n\n#\n\n\nFishmetica.gg\n \u2014 \nFunction\n.\n\n\ngenerates g matrix with m and f, tmax,jmax\n\n\nsource\n\n\n#\n\n\nFishmetica.gz\n \u2014 \nFunction\n.\n\n\nreturns total mortality z as sum of natural m and fishing f mortality matrices\n\n\nsource\n\n\n#\n\n\nFishmetica.gm_burago\n \u2014 \nFunction\n.\n\n\nx,y\n\n\nsource\n\n\n#\n\n\nFishmetica.gm\n \u2014 \nFunction\n.\n\n\nx,y\n\n\nsource\n\n\nAdding noise\n\n\n#\n\n\nFishmetica.noise2ts_burago\n \u2014 \nFunction\n.\n\n\nadds some noise with d(m,s) (laplace, normal) to a matrix\n\n\nsource\n\n\nOptimization\n\n\n#\n\n\nFishmetica.Lp\n \u2014 \nFunction\n.\n\n\nlook how to evaluate closeness of data and model!!!! as L1+L2 no prints out\n\n\nsource\n\n\n#\n\n\nFishmetica.Lp12\n \u2014 \nFunction\n.\n\n\nlook how to evaluate closeness of data and model!!!! as L1+L2\n\n\nsource\n\n\n#\n\n\nFishmetica.Lmine2\n \u2014 \nFunction\n.\n\n\nL as L1+L2 with dispersions for the normal distribution, p=2 no prints out\n\n\nsource\n\n\n#\n\n\nFishmetica.Lmine2max\n \u2014 \nFunction\n.\n\n\nL as max no prints out\n\n\nsource\n\n\n#\n\n\nFishmetica.Lpv\n \u2014 \nFunction\n.\n\n\nevaluates criteria\n\n\nsource\n\n\n#\n\n\nFishmetica.buragofunc\n \u2014 \nFunction\n.\n\n\ncriterion (Laplace) evaluation for cohorts of cst type/Lp, p=1\n\n\nsource\n\n\n#\n\n\nFishmetica.buragofuncp2\n \u2014 \nFunction\n.\n\n\ncriterion (Gauss) evaluation for cohorts of cst type/Lp, p=2\n\n\nsource\n\n\n#\n\n\nFishmetica.minefuncp2\n \u2014 \nFunction\n.\n\n\ncriterion (normal, deviation) evaluation for cohorts of cst type/Lmine2, p=2\n\n\nsource\n\n\n#\n\n\nFishmetica.minefuncp2max\n \u2014 \nFunction\n.\n\n\ncriterion (normal, deviation) evaluation for cohorts of cst type/Lmine2max, p=2\n\n\nsource\n\n\n#\n\n\nFishmetica.buragofunc12\n \u2014 \nFunction\n.\n\n\ncriterion (normal, deviation) evaluation for cohorts of cst type/Lp12, p=2\n\n\nsource\n\n\n#\n\n\nFishmetica.buragofunc_vjt_2\n \u2014 \nFunction\n.\n\n\nreturns Lpv\n\n\nsource\n\n\n#\n\n\nFishmetica.buragofunc_v\n \u2014 \nFunction\n.\n\n\nreturns Lpv\n\n\nsource\n\n\n#\n\n\nFishmetica.buragoconstraint1\n \u2014 \nFunction\n.\n\n\nconstraint\n\n\nsource\n\n\n#\n\n\nFishmetica.buragoconstraint2\n \u2014 \nFunction\n.\n\n\nconstraint\n\n\nsource\n\n\n#\n\n\nFishmetica.buragoconstraint3\n \u2014 \nFunction\n.\n\n\nconstraint\n\n\nsource\n\n\n#\n\n\nFishmetica.buragoconstraint4\n \u2014 \nFunction\n.\n\n\nconstraint\n\n\nsource\n\n\n#\n\n\nFishmetica.buragoconstraint5\n \u2014 \nFunction\n.\n\n\nconstraint\n\n\nsource\n\n\n#\n\n\nFishmetica.buragoconstraint6\n \u2014 \nFunction\n.\n\n\nconstraint\n\n\nsource\n\n\n#\n\n\nFishmetica.optimizeLf\n \u2014 \nFunction\n.\n\n\noptimizes func with 2 algs (a -main and a1 - local), (burago)func (Lp, Lp12, etc)  and 4 buragoconstraints \n\n\nsource\n\n\n#\n\n\nFishmetica.optimizeL\n \u2014 \nFunction\n.\n\n\noptimizes Lp with 2 algs (a -main and a1 - local), buragofunc   and 4 buragoconstraints\n\n\nsource\n\n\n#\n\n\nFishmetica.optimizeLs\n \u2014 \nFunction\n.\n\n\noptimizes Lp with 1 algs (a -main), buragofunc   and 4 buragoconstraints, no lower_bounds, no x_tol, no local_optimizer? no population\n\n\nsource\n\n\n#\n\n\nFishmetica.optimizeLp_v\n \u2014 \nFunction\n.\n\n\noptimizes Lpv\n\n\nsource\n\n\n#\n\n\nFishmetica.optimizeLp_v2\n \u2014 \nFunction\n.\n\n\noptimizes Lp with 2 algs (a -main and a1 - local), buragofunc_v   and 4 buragoconstraints\n\n\nsource\n\n\n#\n\n\nFishmetica.optimizeLp_vjt_2\n \u2014 \nFunction\n.\n\n\nreturns (minf,minx,ret)\n\n\nsource\n\n\n#\n\n\nFishmetica.opt_v\n \u2014 \nFunction\n.\n\n\nevaluates vector of unknown pars with use of given   ALGS=(:LN_NELDERMEAD, :LN_SBPLX, :LN_COBYLA, :LN_NEWUOA, :LN_PRAXIS, :LN_BOBYQA, :LN_AUGLAG, :LN_AUGLAG_EQ) from NLopt and LN_AUGLAG (7),   xx - initial approximation for pars, k - number of iterations, algs - list of algs\n\n\nsource\n\n\nTesting generated matrices\n\n\n#\n\n\nFishmetica.testgmx\n \u2014 \nFunction\n.\n\n\nchecks if generated with M, F matrix x corresponds to model relations\n\n\nsource\n\n\n#\n\n\nFishmetica.testgmy\n \u2014 \nFunction\n.\n\n\nchecks if generated with M, F, W matrix y corresponds to model relations\n\n\nsource\n\n\n#\n\n\nFishmetica.testgmy1\n \u2014 \nFunction\n.\n\n\nchecks if generated with parameters matrix y corresponds  to model relations\n\n\nsource",
            "title": "Generating parameters and strucures"
        },
        {
            "location": "/tutorials/page4/#model-components",
            "text": "#  Fishmetica.gm1  \u2014  Function .  generates x,y with M,F,W,kx,kw,x1j,xt1  source  #  Fishmetica.sigma  \u2014  Function .  returns sigma for  j  source  #  Fishmetica.ushape  \u2014  Function .  returns u-function for j  source  #  Fishmetica.w  \u2014  Function .  returns wieght for t,j (according to the ovsyannikov data)  source  #  Fishmetica.gwtj  \u2014  Function .  wtj  source  #  Fishmetica.h  \u2014  Function .  fills H with 1's  source  #  Fishmetica.ghtj  \u2014  Function .  mtj  source  #  Fishmetica.gmtj  \u2014  Function .  mtj  source  #  Fishmetica.gft  \u2014  Function .  ft=0.2  source  #  Fishmetica.gftj  \u2014  Function .  ftj  source  #  Fishmetica.gx  \u2014  Function .  x  source  #  Fishmetica.gy  \u2014  Function .  y  source  #  Fishmetica.gg  \u2014  Function .  generates g matrix with m and f, tmax,jmax  source  #  Fishmetica.gz  \u2014  Function .  returns total mortality z as sum of natural m and fishing f mortality matrices  source  #  Fishmetica.gm_burago  \u2014  Function .  x,y  source  #  Fishmetica.gm  \u2014  Function .  x,y  source",
            "title": "Model components"
        },
        {
            "location": "/tutorials/page4/#adding-noise",
            "text": "#  Fishmetica.noise2ts_burago  \u2014  Function .  adds some noise with d(m,s) (laplace, normal) to a matrix  source",
            "title": "Adding noise"
        },
        {
            "location": "/tutorials/page4/#optimization",
            "text": "#  Fishmetica.Lp  \u2014  Function .  look how to evaluate closeness of data and model!!!! as L1+L2 no prints out  source  #  Fishmetica.Lp12  \u2014  Function .  look how to evaluate closeness of data and model!!!! as L1+L2  source  #  Fishmetica.Lmine2  \u2014  Function .  L as L1+L2 with dispersions for the normal distribution, p=2 no prints out  source  #  Fishmetica.Lmine2max  \u2014  Function .  L as max no prints out  source  #  Fishmetica.Lpv  \u2014  Function .  evaluates criteria  source  #  Fishmetica.buragofunc  \u2014  Function .  criterion (Laplace) evaluation for cohorts of cst type/Lp, p=1  source  #  Fishmetica.buragofuncp2  \u2014  Function .  criterion (Gauss) evaluation for cohorts of cst type/Lp, p=2  source  #  Fishmetica.minefuncp2  \u2014  Function .  criterion (normal, deviation) evaluation for cohorts of cst type/Lmine2, p=2  source  #  Fishmetica.minefuncp2max  \u2014  Function .  criterion (normal, deviation) evaluation for cohorts of cst type/Lmine2max, p=2  source  #  Fishmetica.buragofunc12  \u2014  Function .  criterion (normal, deviation) evaluation for cohorts of cst type/Lp12, p=2  source  #  Fishmetica.buragofunc_vjt_2  \u2014  Function .  returns Lpv  source  #  Fishmetica.buragofunc_v  \u2014  Function .  returns Lpv  source  #  Fishmetica.buragoconstraint1  \u2014  Function .  constraint  source  #  Fishmetica.buragoconstraint2  \u2014  Function .  constraint  source  #  Fishmetica.buragoconstraint3  \u2014  Function .  constraint  source  #  Fishmetica.buragoconstraint4  \u2014  Function .  constraint  source  #  Fishmetica.buragoconstraint5  \u2014  Function .  constraint  source  #  Fishmetica.buragoconstraint6  \u2014  Function .  constraint  source  #  Fishmetica.optimizeLf  \u2014  Function .  optimizes func with 2 algs (a -main and a1 - local), (burago)func (Lp, Lp12, etc)  and 4 buragoconstraints   source  #  Fishmetica.optimizeL  \u2014  Function .  optimizes Lp with 2 algs (a -main and a1 - local), buragofunc   and 4 buragoconstraints  source  #  Fishmetica.optimizeLs  \u2014  Function .  optimizes Lp with 1 algs (a -main), buragofunc   and 4 buragoconstraints, no lower_bounds, no x_tol, no local_optimizer? no population  source  #  Fishmetica.optimizeLp_v  \u2014  Function .  optimizes Lpv  source  #  Fishmetica.optimizeLp_v2  \u2014  Function .  optimizes Lp with 2 algs (a -main and a1 - local), buragofunc_v   and 4 buragoconstraints  source  #  Fishmetica.optimizeLp_vjt_2  \u2014  Function .  returns (minf,minx,ret)  source  #  Fishmetica.opt_v  \u2014  Function .  evaluates vector of unknown pars with use of given   ALGS=(:LN_NELDERMEAD, :LN_SBPLX, :LN_COBYLA, :LN_NEWUOA, :LN_PRAXIS, :LN_BOBYQA, :LN_AUGLAG, :LN_AUGLAG_EQ) from NLopt and LN_AUGLAG (7),   xx - initial approximation for pars, k - number of iterations, algs - list of algs  source",
            "title": "Optimization"
        },
        {
            "location": "/tutorials/page4/#testing-generated-matrices",
            "text": "#  Fishmetica.testgmx  \u2014  Function .  checks if generated with M, F matrix x corresponds to model relations  source  #  Fishmetica.testgmy  \u2014  Function .  checks if generated with M, F, W matrix y corresponds to model relations  source  #  Fishmetica.testgmy1  \u2014  Function .  checks if generated with parameters matrix y corresponds  to model relations  source",
            "title": "Testing generated matrices"
        },
        {
            "location": "/tutorials/page2/",
            "text": "Types and their transformations\n\n\n\n\nRepresenting cohorts with matrices\n\n\n#\n\n\nFishmetica.csmtx\n \u2014 \nType\n.\n\n\ncohorts related matrix year_b - initial physical year tmax - number of seasons jmax - number of ages mtx: x,y,w,m,f, etc.\n\n\nsource\n\n\n#\n\n\nFishmetica.cohorts_t\n \u2014 \nType\n.\n\n\ncohorts as 3 matrices: year_b - initial year, year_e - last year,  x - abundance, y - catch, w - weight (obsolete)\n\n\nsource\n\n\n#\n\n\nFishmetica.cohorts_t1\n \u2014 \nType\n.\n\n\ncohorts as 3 tables (=cohorts_m) yb - physical year associated with cohort (when age=1) tmax - number of seasons jmax - number of ages x,y,w- tables with abundunce, catch, weight\n\n\nsource\n\n\n\n\nRepresenting cohorts with vectors\n\n\n#\n\n\nFishmetica.cvec\n \u2014 \nType\n.\n\n\ndetail mtx representation of a cohort as sequence of vecs no- the number yb - physical year associated with cohort (when age=1) jbeg - youngest age  len - length jtrust - trusted age vec\n\n\nsource\n\n\n#\n\n\nFishmetica.csvecs\n \u2014 \nType\n.\n\n\ncohort as vecs\n\n\nsource\n\n\n#\n\n\nFishmetica.cohort_v\n \u2014 \nType\n.\n\n\ndetail cohort representation  tmax - number of seasons jmax - number of ages yb - physical year assciated with cohort (when age=1) jb - youngest age  l - length jt - trusted age xv,yv,wv - vectors with abundunce, catch, weight\n\n\nsource\n\n\n#\n\n\nFishmetica.cohorts_v\n \u2014 \nType\n.\n\n\ndetail  representation of given cohorts tmax - number of seasons jmax - number of ages cs -  vector of cohort of type cohort_v\n\n\nsource\n\n\n#\n\n\nFishmetica.cohorts_v1\n \u2014 \nType\n.\n\n\ndetail  representation of given cohorts tmax - number of seasons jmax - number of ages cs -  vector of cohort of type cohort_v\n\n\nsource\n\n\n#\n\n\nFishmetica.cohort_v1\n \u2014 \nType\n.\n\n\ndetail cohort representation  no- the number yb - physical year associated with cohort (when age=1) tmax - number of seasons jmax - number of ages jbeg - initial age  len - length jtrust - trusted age xv,yv,wv - vectors with abundunce, catch, weight\n\n\nsource\n\n\n#\n\n\nFishmetica.cohorts_v2\n \u2014 \nType\n.\n\n\ncohorts as cs: cohort_v1? year_b - physical year associated with cohort (when age=1) tmax - number of seasons jmax - number of ages\n\n\nsource\n\n\nGenerating vectors\n\n\n#\n\n\nFishmetica.gvecs\n \u2014 \nFunction\n.\n\n\ngenerates xv1,yv1 of csvecs type with use of xv::csvecs,yv::csvecs,wv::csvecs,zv::csvecs,gv::csvecs first makes a deep copy, then modifies vectors \n\n\nsource\n\n\n#\n\n\nFishmetica.gvecs1\n \u2014 \nFunction\n.\n\n\ngenerates xv1,yv1 of csvecs type with use of xv::csvecs,yv::csvecs,wv::csvecs,zv::csvecs,gv::csvecs first makes a deep copy, then modifies vectors \n\n\nsource\n\n\nType transformations\n\n\n#\n\n\nFishmetica.cst2csv2\n \u2014 \nFunction\n.\n\n\ncohorts_t1->cohorts_v2\n\n\ncohorts_t1: year_b - initial physical year tmax - number of seasons jmax - number of ages x,y,w -  matrices  with abundunce, catch, weight\n\n\ncohorts_v2: year_b - initial physical year tmax - number of seasons jmax - number of ages cs - cohorts of type cohort_v1\n\n\ncohort_v1: no- the number yb - physical year associated with cohort (when age=1) tmax - number of seasons jmax - number of ages jbeg - initial age  len - length jtrust - trusted age xv,yv,wv- vectors with abundunce, catch, weight tmax+jmax-1 \u2013 number of related cohorts\n\n\nsource\n\n\n#\n\n\nFishmetica.csv2cst\n \u2014 \nFunction\n.\n\n\ncohorts_v2->cohirts_t1\n\n\ncohorts_t1: year_b - initial physical year tmax - number of seasons jmax - number of ages x,y,w -  matrices  with abundunce, catch, weight\n\n\ncohorts_v2: year_b - initial physical year tmax - number of seasons jmax - number of ages cs - cohorts of type cohort_v1\n\n\ncohort_v1: no- the number yb - physical year associated with cohort (when age=1) tmax - number of seasons jmax - number of ages jbeg - initial age  len - length jtrust - trusted age xv,yv,wv- vectors with abundunce, catch, weight\n\n\nsource\n\n\n#\n\n\nFishmetica.csmtx2csvs\n \u2014 \nFunction\n.\n\n\ncohorts related matrix (of type csmtx: x,y,w,m,f,z,g)->sequence of vectors (of type csvecs)\n\n\ncsrm:cohorts related matrix (of type csrm) year_b - initial physical year tmax - number of seasons jmax - number of ages x,y,w, m,f,g -  cohorts related matrices  \n\n\ncvec: detail cohort representation as vec no- the number in the sequence yb - physical year associated with cohort (when age=1) jbeg - initial age  len - length jtrust - trusted age vec\n\n\ncsvecs: cohorts related mtx as a sequence of cvec no- the number yb - physical year associated with cohort (when age=1) tmax - number of seasons jmax - number of ages jbeg - initial age  len - length jtrust - trusted age xv,yv,wv- vectors with abundunce, catch, weight tmax+jmax-1 \u2013 number of related cohorts\n\n\nsource\n\n\n#\n\n\nFishmetica.csvs2csmtx\n \u2014 \nFunction\n.\n\n\nsequence of vectors (of type csvecs)->cohorts related matrix (of type csrm) (x,y,w,m,f,z,g)\n\n\ncsrm:cohorts related matrix (of type csrm) year_b - initial physical year tmax - number of seasons jmax - number of ages x,y,w, m,f,g -  cohorts related matrices  \n\n\ncvec: detail cohort representation as vec no- the number in the sequence yb - physical year associated with cohort (when age=1) jbeg - initial age  len - length jtrust - trusted age vec\n\n\ncsvecs: cohorts related mtx as a sequence of cvec no- the number yb - physical year associated with cohort (when age=1) tmax - number of seasons jmax - number of ages jbeg - initial age  len - length jtrust - trusted age xv,yv,wv- vectors with abundunce, catch, weight tmax+jmax-2 \u2013 number of related cohorts\n\n\nsource\n\n\n\n\nTesting type transformations\n\n\n#\n\n\nFishmetica.eq_cvec\n \u2014 \nFunction\n.\n\n\nchecks if  2 cohorts of cvec type equal\n\n\nsource\n\n\n#\n\n\nFishmetica.eq_csvecs\n \u2014 \nFunction\n.\n\n\nchecks if  2 descriptions of csmtx type equal\n\n\nsource\n\n\n#\n\n\nFishmetica.eq_cst\n \u2014 \nFunction\n.\n\n\nchecks if  2 cohorts of cohorts_t type equal\n\n\nsource\n\n\n#\n\n\nFishmetica.eq_cv1\n \u2014 \nFunction\n.\n\n\nchecks if  2 cohorts of cohort_v1 type equal\n\n\nsource\n\n\n#\n\n\nFishmetica.eq_cv1_alt\n \u2014 \nFunction\n.\n\n\nchecks if  vectors of cohorts of cohort_v1 type equal alt\n\n\nsource\n\n\n#\n\n\nFishmetica.eq_csv2\n \u2014 \nFunction\n.\n\n\nchecks if  2 cohorts of cohorts_v2 type equal\n\n\nsource\n\n\n#\n\n\nFishmetica.eq_csmtx\n \u2014 \nFunction\n.\n\n\nchecks if  2 cohorts of cohorts_t1 type equal\n\n\nsource\n\n\n#\n\n\nFishmetica.runtest_cst2csv\n \u2014 \nFunction\n.\n\n\nchecks if direct*reverse=equal for cst2csv2 and csv2cst\n\n\nsource\n\n\n#\n\n\nFishmetica.runtest_csmtx2csvs\n \u2014 \nFunction\n.\n\n\nchecks if csv2cst(cst2csv2(cst)=cst\n\n\nsource",
            "title": "Types"
        },
        {
            "location": "/tutorials/page2/#representing-cohorts-with-matrices",
            "text": "#  Fishmetica.csmtx  \u2014  Type .  cohorts related matrix year_b - initial physical year tmax - number of seasons jmax - number of ages mtx: x,y,w,m,f, etc.  source  #  Fishmetica.cohorts_t  \u2014  Type .  cohorts as 3 matrices: year_b - initial year, year_e - last year,  x - abundance, y - catch, w - weight (obsolete)  source  #  Fishmetica.cohorts_t1  \u2014  Type .  cohorts as 3 tables (=cohorts_m) yb - physical year associated with cohort (when age=1) tmax - number of seasons jmax - number of ages x,y,w- tables with abundunce, catch, weight  source",
            "title": "Representing cohorts with matrices"
        },
        {
            "location": "/tutorials/page2/#representing-cohorts-with-vectors",
            "text": "#  Fishmetica.cvec  \u2014  Type .  detail mtx representation of a cohort as sequence of vecs no- the number yb - physical year associated with cohort (when age=1) jbeg - youngest age  len - length jtrust - trusted age vec  source  #  Fishmetica.csvecs  \u2014  Type .  cohort as vecs  source  #  Fishmetica.cohort_v  \u2014  Type .  detail cohort representation  tmax - number of seasons jmax - number of ages yb - physical year assciated with cohort (when age=1) jb - youngest age  l - length jt - trusted age xv,yv,wv - vectors with abundunce, catch, weight  source  #  Fishmetica.cohorts_v  \u2014  Type .  detail  representation of given cohorts tmax - number of seasons jmax - number of ages cs -  vector of cohort of type cohort_v  source  #  Fishmetica.cohorts_v1  \u2014  Type .  detail  representation of given cohorts tmax - number of seasons jmax - number of ages cs -  vector of cohort of type cohort_v  source  #  Fishmetica.cohort_v1  \u2014  Type .  detail cohort representation  no- the number yb - physical year associated with cohort (when age=1) tmax - number of seasons jmax - number of ages jbeg - initial age  len - length jtrust - trusted age xv,yv,wv - vectors with abundunce, catch, weight  source  #  Fishmetica.cohorts_v2  \u2014  Type .  cohorts as cs: cohort_v1? year_b - physical year associated with cohort (when age=1) tmax - number of seasons jmax - number of ages  source",
            "title": "Representing cohorts with vectors"
        },
        {
            "location": "/tutorials/page2/#generating-vectors",
            "text": "#  Fishmetica.gvecs  \u2014  Function .  generates xv1,yv1 of csvecs type with use of xv::csvecs,yv::csvecs,wv::csvecs,zv::csvecs,gv::csvecs first makes a deep copy, then modifies vectors   source  #  Fishmetica.gvecs1  \u2014  Function .  generates xv1,yv1 of csvecs type with use of xv::csvecs,yv::csvecs,wv::csvecs,zv::csvecs,gv::csvecs first makes a deep copy, then modifies vectors   source",
            "title": "Generating vectors"
        },
        {
            "location": "/tutorials/page2/#type-transformations",
            "text": "#  Fishmetica.cst2csv2  \u2014  Function .  cohorts_t1->cohorts_v2  cohorts_t1: year_b - initial physical year tmax - number of seasons jmax - number of ages x,y,w -  matrices  with abundunce, catch, weight  cohorts_v2: year_b - initial physical year tmax - number of seasons jmax - number of ages cs - cohorts of type cohort_v1  cohort_v1: no- the number yb - physical year associated with cohort (when age=1) tmax - number of seasons jmax - number of ages jbeg - initial age  len - length jtrust - trusted age xv,yv,wv- vectors with abundunce, catch, weight tmax+jmax-1 \u2013 number of related cohorts  source  #  Fishmetica.csv2cst  \u2014  Function .  cohorts_v2->cohirts_t1  cohorts_t1: year_b - initial physical year tmax - number of seasons jmax - number of ages x,y,w -  matrices  with abundunce, catch, weight  cohorts_v2: year_b - initial physical year tmax - number of seasons jmax - number of ages cs - cohorts of type cohort_v1  cohort_v1: no- the number yb - physical year associated with cohort (when age=1) tmax - number of seasons jmax - number of ages jbeg - initial age  len - length jtrust - trusted age xv,yv,wv- vectors with abundunce, catch, weight  source  #  Fishmetica.csmtx2csvs  \u2014  Function .  cohorts related matrix (of type csmtx: x,y,w,m,f,z,g)->sequence of vectors (of type csvecs)  csrm:cohorts related matrix (of type csrm) year_b - initial physical year tmax - number of seasons jmax - number of ages x,y,w, m,f,g -  cohorts related matrices    cvec: detail cohort representation as vec no- the number in the sequence yb - physical year associated with cohort (when age=1) jbeg - initial age  len - length jtrust - trusted age vec  csvecs: cohorts related mtx as a sequence of cvec no- the number yb - physical year associated with cohort (when age=1) tmax - number of seasons jmax - number of ages jbeg - initial age  len - length jtrust - trusted age xv,yv,wv- vectors with abundunce, catch, weight tmax+jmax-1 \u2013 number of related cohorts  source  #  Fishmetica.csvs2csmtx  \u2014  Function .  sequence of vectors (of type csvecs)->cohorts related matrix (of type csrm) (x,y,w,m,f,z,g)  csrm:cohorts related matrix (of type csrm) year_b - initial physical year tmax - number of seasons jmax - number of ages x,y,w, m,f,g -  cohorts related matrices    cvec: detail cohort representation as vec no- the number in the sequence yb - physical year associated with cohort (when age=1) jbeg - initial age  len - length jtrust - trusted age vec  csvecs: cohorts related mtx as a sequence of cvec no- the number yb - physical year associated with cohort (when age=1) tmax - number of seasons jmax - number of ages jbeg - initial age  len - length jtrust - trusted age xv,yv,wv- vectors with abundunce, catch, weight tmax+jmax-2 \u2013 number of related cohorts  source",
            "title": "Type transformations"
        },
        {
            "location": "/tutorials/page2/#testing-type-transformations",
            "text": "#  Fishmetica.eq_cvec  \u2014  Function .  checks if  2 cohorts of cvec type equal  source  #  Fishmetica.eq_csvecs  \u2014  Function .  checks if  2 descriptions of csmtx type equal  source  #  Fishmetica.eq_cst  \u2014  Function .  checks if  2 cohorts of cohorts_t type equal  source  #  Fishmetica.eq_cv1  \u2014  Function .  checks if  2 cohorts of cohort_v1 type equal  source  #  Fishmetica.eq_cv1_alt  \u2014  Function .  checks if  vectors of cohorts of cohort_v1 type equal alt  source  #  Fishmetica.eq_csv2  \u2014  Function .  checks if  2 cohorts of cohorts_v2 type equal  source  #  Fishmetica.eq_csmtx  \u2014  Function .  checks if  2 cohorts of cohorts_t1 type equal  source  #  Fishmetica.runtest_cst2csv  \u2014  Function .  checks if direct*reverse=equal for cst2csv2 and csv2cst  source  #  Fishmetica.runtest_csmtx2csvs  \u2014  Function .  checks if csv2cst(cst2csv2(cst)=cst  source",
            "title": "Testing type transformations"
        },
        {
            "location": "/tutorials/page1/",
            "text": "Fuctions to generate $\\mu$'s and $\\sigma^2$'s\n\n\n\n\nFiltering\n\n\n#\n\n\nFishmetica.sigma2f\n \u2014 \nFunction\n.\n\n\nfiltering: returns a vector of deviations ($sigma^2^f$) for a cohort  sigma^2_0 - variance  for initial age sigma^2_e -  variance  for the evidance vector (catches) sigma^2_x -  variance  for the state vector (population) l - the length of the cohort\n\n\nsource\n\n\n#\n\n\nFishmetica.muf\n \u2014 \nFunction\n.\n\n\nfiltering: returns a vector of means (mu^f) for a cohort  alpha - coefficients for the state x_{t+1}=x_t +alpha_t beta - coefficients for the observation y_{t}=x_t +beta_t  e - the evidance vector mu_0 - mean for the initial age sigma^2_0 - variance (deviation is the square root of its variance) for initial age mu_e - mean for the evidence sigma^2_e - variance  for the evidance  (catch) mu_x - mean for the state sigma^2_e - variance for the state (population) l - the length of the cohort\n\n\nsource\n\n\n#\n\n\nFishmetica.genmus2f\n \u2014 \nFunction\n.\n\n\nfiltering: returns filtered cohorts represented as vecs: csvlogts1muf - means,csvlogts1s2f - sigmas^2 (deviations),\n\n\nsource\n\n\n\n\nPrediction\n\n\n#\n\n\nFishmetica.sigma2p\n \u2014 \nFunction\n.\n\n\nprediction: returns the vector of deviation predictions (sigma^2^p_{t+1},..., sigma^2^p_{t+k+1}) for a cohort  sigma^2_x - variance for the state vector (population) l - the length of the cohort\n\n\nsource\n\n\n#\n\n\nFishmetica.mup\n \u2014 \nFunction\n.\n\n\nprediction: returns the vector of mean predictions (mu^p_{t+1}, ..., mu^p_{t+k+1}) for a cohort  alphak=(alpha^t, ..., alpha_{t+k}) - (virtual) coefficients for x_{t+k+1}=x_{t+k} +alpha_{t+k} -  muft - mu^f_t mu_x - mean for the state k >= 1 - the prediction step\n\n\nsource\n\n\n#\n\n\nFishmetica.genmus2p\n \u2014 \nFunction\n.\n\n\nmakes k predictions for all cohorts (a^e+1, .., a^e+k)  with yr>=yr2. cuts extra elements with age greater than jmax.  returns filtered cohorts represented as vecs: csvlogts1mup - means,csvlogts1s2p - sigmas^2 (deviations), mup and s2p (means and sigmas^2 (deviations))\n\n\nsource\n\n\n\n\nSmoothing\n\n\n#\n\n\nFishmetica.sigma2b\n \u2014 \nFunction\n.\n\n\nbackward: returns a vector of deviations (sigma^2^b) for a cohort  sigma^2_0 - variance  for initial age sigma^2_e -  variance  for the evidance vector (catches) sigma^2_x -  variance  for the state vector (population) l - the length of the cohort\n\n\nsource\n\n\n#\n\n\nFishmetica.genmus2s\n \u2014 \nFunction\n.\n\n\nsmoothing: makes several cohorts represented as vecs: csvlogts1mus - means,csvlogts1s2s - sigmas^2 (deviations)\n\n\nsource\n\n\n\n\nAuxilary\n\n\n#\n\n\nFishmetica.genG\n \u2014 \nFunction\n.\n\n\ngenerates G with M (natural mortality) and F (catch mortality), Z (full mortality)\n\n\nsource\n\n\n#\n\n\nFishmetica.genZ\n \u2014 \nFunction\n.\n\n\ngenerates Z (full)  with M (natural mortality) and F (catch mortality)\n\n\nsource\n\n\n#\n\n\nFishmetica.genQuantile\n \u2014 \nFunction\n.\n\n\nat +p%\n\n\nsource\n\n\n#\n\n\nFishmetica.genQuantile1\n \u2014 \nFunction\n.\n\n\nat -p%\n\n\nsource",
            "title": "Bayesian estimations"
        },
        {
            "location": "/tutorials/page1/#filtering",
            "text": "#  Fishmetica.sigma2f  \u2014  Function .  filtering: returns a vector of deviations ($sigma^2^f$) for a cohort  sigma^2_0 - variance  for initial age sigma^2_e -  variance  for the evidance vector (catches) sigma^2_x -  variance  for the state vector (population) l - the length of the cohort  source  #  Fishmetica.muf  \u2014  Function .  filtering: returns a vector of means (mu^f) for a cohort  alpha - coefficients for the state x_{t+1}=x_t +alpha_t beta - coefficients for the observation y_{t}=x_t +beta_t  e - the evidance vector mu_0 - mean for the initial age sigma^2_0 - variance (deviation is the square root of its variance) for initial age mu_e - mean for the evidence sigma^2_e - variance  for the evidance  (catch) mu_x - mean for the state sigma^2_e - variance for the state (population) l - the length of the cohort  source  #  Fishmetica.genmus2f  \u2014  Function .  filtering: returns filtered cohorts represented as vecs: csvlogts1muf - means,csvlogts1s2f - sigmas^2 (deviations),  source",
            "title": "Filtering"
        },
        {
            "location": "/tutorials/page1/#prediction",
            "text": "#  Fishmetica.sigma2p  \u2014  Function .  prediction: returns the vector of deviation predictions (sigma^2^p_{t+1},..., sigma^2^p_{t+k+1}) for a cohort  sigma^2_x - variance for the state vector (population) l - the length of the cohort  source  #  Fishmetica.mup  \u2014  Function .  prediction: returns the vector of mean predictions (mu^p_{t+1}, ..., mu^p_{t+k+1}) for a cohort  alphak=(alpha^t, ..., alpha_{t+k}) - (virtual) coefficients for x_{t+k+1}=x_{t+k} +alpha_{t+k} -  muft - mu^f_t mu_x - mean for the state k >= 1 - the prediction step  source  #  Fishmetica.genmus2p  \u2014  Function .  makes k predictions for all cohorts (a^e+1, .., a^e+k)  with yr>=yr2. cuts extra elements with age greater than jmax.  returns filtered cohorts represented as vecs: csvlogts1mup - means,csvlogts1s2p - sigmas^2 (deviations), mup and s2p (means and sigmas^2 (deviations))  source",
            "title": "Prediction"
        },
        {
            "location": "/tutorials/page1/#smoothing",
            "text": "#  Fishmetica.sigma2b  \u2014  Function .  backward: returns a vector of deviations (sigma^2^b) for a cohort  sigma^2_0 - variance  for initial age sigma^2_e -  variance  for the evidance vector (catches) sigma^2_x -  variance  for the state vector (population) l - the length of the cohort  source  #  Fishmetica.genmus2s  \u2014  Function .  smoothing: makes several cohorts represented as vecs: csvlogts1mus - means,csvlogts1s2s - sigmas^2 (deviations)  source",
            "title": "Smoothing"
        },
        {
            "location": "/tutorials/page1/#auxilary",
            "text": "#  Fishmetica.genG  \u2014  Function .  generates G with M (natural mortality) and F (catch mortality), Z (full mortality)  source  #  Fishmetica.genZ  \u2014  Function .  generates Z (full)  with M (natural mortality) and F (catch mortality)  source  #  Fishmetica.genQuantile  \u2014  Function .  at +p%  source  #  Fishmetica.genQuantile1  \u2014  Function .  at -p%  source",
            "title": "Auxilary"
        },
        {
            "location": "/tutorials/page3/",
            "text": "Fishmetica.ALGS\n\n\nFishmetica.kw\n\n\nFishmetica.kx\n\n\nFishmetica.lambda\n\n\nFishmetica.cohort_v\n\n\nFishmetica.cohort_v1\n\n\nFishmetica.cohorts_t\n\n\nFishmetica.cohorts_t1\n\n\nFishmetica.cohorts_v\n\n\nFishmetica.cohorts_v1\n\n\nFishmetica.cohorts_v2\n\n\nFishmetica.csmtx\n\n\nFishmetica.csvecs\n\n\nFishmetica.cvec\n\n\nFishmetica.Lmine2\n\n\nFishmetica.Lmine2max\n\n\nFishmetica.Lp\n\n\nFishmetica.Lp12\n\n\nFishmetica.Lpv\n\n\nFishmetica.buragoconstraint1\n\n\nFishmetica.buragoconstraint2\n\n\nFishmetica.buragoconstraint3\n\n\nFishmetica.buragoconstraint4\n\n\nFishmetica.buragoconstraint5\n\n\nFishmetica.buragoconstraint6\n\n\nFishmetica.buragofunc\n\n\nFishmetica.buragofunc12\n\n\nFishmetica.buragofunc_v\n\n\nFishmetica.buragofunc_vjt_2\n\n\nFishmetica.buragofuncp2\n\n\nFishmetica.csmtx2csvs\n\n\nFishmetica.cst2csv2\n\n\nFishmetica.csv2cst\n\n\nFishmetica.csvs2csmtx\n\n\nFishmetica.eq_csmtx\n\n\nFishmetica.eq_cst\n\n\nFishmetica.eq_csv2\n\n\nFishmetica.eq_csvecs\n\n\nFishmetica.eq_cv1\n\n\nFishmetica.eq_cv1_alt\n\n\nFishmetica.eq_cvec\n\n\nFishmetica.genG\n\n\nFishmetica.genQuantile\n\n\nFishmetica.genQuantile1\n\n\nFishmetica.genZ\n\n\nFishmetica.genmus2f\n\n\nFishmetica.genmus2p\n\n\nFishmetica.genmus2s\n\n\nFishmetica.gft\n\n\nFishmetica.gftj\n\n\nFishmetica.gg\n\n\nFishmetica.ghtj\n\n\nFishmetica.gm\n\n\nFishmetica.gm1\n\n\nFishmetica.gm_burago\n\n\nFishmetica.gmtj\n\n\nFishmetica.gvecs\n\n\nFishmetica.gvecs1\n\n\nFishmetica.gwtj\n\n\nFishmetica.gx\n\n\nFishmetica.gy\n\n\nFishmetica.gz\n\n\nFishmetica.h\n\n\nFishmetica.minefuncp2\n\n\nFishmetica.minefuncp2max\n\n\nFishmetica.muf\n\n\nFishmetica.mup\n\n\nFishmetica.noise2ts_burago\n\n\nFishmetica.opt_v\n\n\nFishmetica.optimizeL\n\n\nFishmetica.optimizeLf\n\n\nFishmetica.optimizeLp_v\n\n\nFishmetica.optimizeLp_v2\n\n\nFishmetica.optimizeLp_vjt_2\n\n\nFishmetica.optimizeLs\n\n\nFishmetica.runtest_csmtx2csvs\n\n\nFishmetica.runtest_cst2csv\n\n\nFishmetica.set_count\n\n\nFishmetica.set_cst\n\n\nFishmetica.set_jtrustsmax\n\n\nFishmetica.set_lambda\n\n\nFishmetica.sigma\n\n\nFishmetica.sigma2b\n\n\nFishmetica.sigma2f\n\n\nFishmetica.sigma2p\n\n\nFishmetica.testgmx\n\n\nFishmetica.testgmy\n\n\nFishmetica.testgmy1\n\n\nFishmetica.ushape\n\n\nFishmetica.w\n\n\nFishmetica.ww_osp",
            "title": "Index"
        }
    ]
}